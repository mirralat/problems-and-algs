При решении задачи мною был задействован алгоритм бинарного поиска.
Циклический сдвиг в данном случае подразумевает ситуацию, при которой обычный и эффективный метод поиска максимума
не может быть реализован, поэтому мною был предложен альтернативный метод решения задачи.

Для начала, разделим массив на две части.
В первую очередь отсеем "правильные последовательности", в которых, несмотря на циклический сдвиг,
массив является отсортированным по возрастанию. Для нахождения максимума в таком массиве подойдет бинарный поиск.
Если массив не удовлетворяет условию, выполним поисковую функцию на две ранее выделенные части.

Поисковая функция работает следующим образом. Функции передается в качестве аргумента массив. После получения аргумента
поисковая функция вызывает рекурсивную функцию, работающую по следующему принципу: ей передается счетчик и массив в качестве
аргумента. В начале проверяется условие: если первый элемент массива меньше последнего, возвращается значение счетчика.
В противном случае происходит рекурсивное удаление последнего элемента и увеличивание счетчика на единицу.
Сетчик нужен для определения индекса локального максимума в массиве. Если он равен нулю, возвращается просто последний элемент
в локальном массиве. Если нет - его значение возвращается поисковой функции.

После чего в основной функции мы сравниваем эти локальные максимумы и возвращаем наибольшее значение. Это значение -
индекс максимального элемента массива.

С реализацией можно ознакомиться здесь:
https://pastebin.com/3XYccDX5

Приведено сравнение с линейным поиском.